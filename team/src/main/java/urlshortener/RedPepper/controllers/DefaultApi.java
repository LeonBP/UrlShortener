///**
// * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
// * https://github.com/swagger-api/swagger-codegen
// * Do not edit the class manually.
// */
//package urlshortener.RedPepper.controllers;
//
//import io.swagger.model.Config;
//import io.swagger.model.Error;
//import org.springframework.core.io.Resource;
//
//import io.swagger.annotations.*;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.PathVariable;
//import org.springframework.web.bind.annotation.RequestBody;
//import org.springframework.web.bind.annotation.RequestHeader;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestMethod;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.RequestPart;
//import org.springframework.web.multipart.MultipartFile;
//
//import java.util.List;
//import javax.validation.constraints.*;
//import javax.validation.Valid;
//@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-21T17:50:33.590Z")
//
//@Api(value = "default", description = "the default API")
//public interface DefaultApi {
//
//    @ApiOperation(value = "", notes = "Gets the .jsp file with the associated JavaScript that represents the UI of the web service. ", response = Resource.class, tags={ "Basic services", })
//    @ApiResponses(value = {
//        @ApiResponse(code = 200, message = "Successful response", response = Resource.class),
//        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
//
//    @RequestMapping(value = "/",
//        method = RequestMethod.GET)
//    ResponseEntity<Resource> rootGet();
//
//
//    @ApiOperation(value = "", notes = "Post an URL to be validated and shortened. ", response = String.class, tags={ "Basic services", })
//    @ApiResponses(value = {
//        @ApiResponse(code = 201, message = "URL shortened correctly and stored in db.", response = String.class),
//        @ApiResponse(code = 403, message = "URL not valid.", response = Error.class) })
//
//    @RequestMapping(value = "/",
//        method = RequestMethod.POST)
//    ResponseEntity<String> rootPost( @NotNull@ApiParam(value = "URL to be shortened", required = true) @RequestParam(value = "url", required = true) String url,@ApiParam(value = "Configuraion of the geohash generator" ,required=true )  @Valid @RequestBody Config mode);
//
//}
